// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WeatherSensorEmulator.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TestIServe.Contracts.WeatherSensorEmulatorService {

  /// <summary>Holder for reflection information generated from WeatherSensorEmulator.proto</summary>
  public static partial class WeatherSensorEmulatorReflection {

    #region Descriptor
    /// <summary>File descriptor for WeatherSensorEmulator.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static WeatherSensorEmulatorReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtXZWF0aGVyU2Vuc29yRW11bGF0b3IucHJvdG8SHFdlYXRoZXJTZW5zb3JF",
            "bXVsYXRvclNlcnZpY2UiMAocUmVxdWVzdFJlYWRBbGxBZ2dyZWdhdGVkRGF0",
            "YRIQCghjbGllbnRJZBgBIAEoCSKMAQoZQWdncmVnYXRlZFNlbnNvckRhdGFT",
            "bGljZRIKCgJpZBgBIAEoCRIRCglzbGljZVRpbWUYAiABKAMSUAoUYWdncmVh",
            "Z2F0ZVNlbnNvckRhdGEYAyABKAsyMi5XZWF0aGVyU2Vuc29yRW11bGF0b3JT",
            "ZXJ2aWNlLkFnZ3JlZ2F0ZWRTZW5zb3JEYXRhIo8BChRBZ2dyZWdhdGVkU2Vu",
            "c29yRGF0YRIaChJUZW1wZXJhdHVyZUF2ZXJhZ2UYASABKAISGQoRSHVtaWRp",
            "ZmllckF2ZXJhZ2UYAiABKAISHwoXQ2FyYm9uRGlveGlkZUNvbnRlbnRNaW4Y",
            "AyABKAISHwoXQ2FyYm9uRGlveGlkZUNvbnRlbnRNYXgYBCABKAIiTQoXUmVx",
            "dWVzdEFnZ3JlYWdhdGlvbkRhdGESCgoCaWQYASABKAkSEAoIZnJvbVRpbWUY",
            "AiABKAMSFAoMY291bnRNaW51dGVzGAMgASgFIjMKDVJlc3BvbnNlUGFyYW0S",
            "EwoLaXNIYXZlVmFsdWUYASABKAgSDQoFdmFsdWUYAiABKAIiggEKG1JlcXVl",
            "c3RTdWJzY3JpYmVVbnN1YnNjcmliZRIQCghjbGllbnRJZBgBIAEoCRI+Cglv",
            "cGVyYXRpb24YAiABKA4yKy5XZWF0aGVyU2Vuc29yRW11bGF0b3JTZXJ2aWNl",
            "LlR5cGVPcGVyYXRpb24SEQoJc2Vuc29yc0lkGAMgAygJImQKE1Jlc3BvbnNl",
            "U2Vuc29yc0RhdGESEAoIY2xpZW50SWQYASABKAkSOwoKc2Vuc29yc0R0bxgC",
            "IAMoCzInLldlYXRoZXJTZW5zb3JFbXVsYXRvclNlcnZpY2UuU2Vuc29yRHRv",
            "InIKCVNlbnNvckR0bxIQCghzZW5zb3JJZBgBIAEoCRIMCgR0aW1lGAIgASgD",
            "EhMKC3RlbXBlcmF0dXJlGAMgASgCEhIKCmh1bWlkaWZpZXIYBCABKAISHAoU",
            "Y2FyYm9uRGlveGlkZUNvbnRlbnQYBSABKAIqOQoNVHlwZU9wZXJhdGlvbhII",
            "CgRub25lEAASDQoJc3Vic2NyaWJlEAESDwoLdW5zdWJzY3JpYmUQAjKgBwoV",
            "V2VhdGhlclNlbnNvckVtdWxhdG9yEoEBCg1TdHJlYW1Db21tYW5kEjkuV2Vh",
            "dGhlclNlbnNvckVtdWxhdG9yU2VydmljZS5SZXF1ZXN0U3Vic2NyaWJlVW5z",
            "dWJzY3JpYmUaMS5XZWF0aGVyU2Vuc29yRW11bGF0b3JTZXJ2aWNlLlJlc3Bv",
            "bnNlU2Vuc29yc0RhdGEoATABEnsKFUdldEF2ZXJhZ2VUZW1wZXJhdHVyZRI1",
            "LldlYXRoZXJTZW5zb3JFbXVsYXRvclNlcnZpY2UuUmVxdWVzdEFnZ3JlYWdh",
            "dGlvbkRhdGEaKy5XZWF0aGVyU2Vuc29yRW11bGF0b3JTZXJ2aWNlLlJlc3Bv",
            "bnNlUGFyYW0SegoUR2V0QXZlcmFnZUh1bWlkaWZpZXISNS5XZWF0aGVyU2Vu",
            "c29yRW11bGF0b3JTZXJ2aWNlLlJlcXVlc3RBZ2dyZWFnYXRpb25EYXRhGisu",
            "V2VhdGhlclNlbnNvckVtdWxhdG9yU2VydmljZS5SZXNwb25zZVBhcmFtEoAB",
            "ChpHZXRNaW5DYXJib25EaW94aWRlQ29udGVudBI1LldlYXRoZXJTZW5zb3JF",
            "bXVsYXRvclNlcnZpY2UuUmVxdWVzdEFnZ3JlYWdhdGlvbkRhdGEaKy5XZWF0",
            "aGVyU2Vuc29yRW11bGF0b3JTZXJ2aWNlLlJlc3BvbnNlUGFyYW0SgAEKGkdl",
            "dE1heENhcmJvbkRpb3hpZGVDb250ZW50EjUuV2VhdGhlclNlbnNvckVtdWxh",
            "dG9yU2VydmljZS5SZXF1ZXN0QWdncmVhZ2F0aW9uRGF0YRorLldlYXRoZXJT",
            "ZW5zb3JFbXVsYXRvclNlcnZpY2UuUmVzcG9uc2VQYXJhbRJ+ChFHZXRBZ2dy",
            "ZWdhdGVkRGF0YRI1LldlYXRoZXJTZW5zb3JFbXVsYXRvclNlcnZpY2UuUmVx",
            "dWVzdEFnZ3JlYWdhdGlvbkRhdGEaMi5XZWF0aGVyU2Vuc29yRW11bGF0b3JT",
            "ZXJ2aWNlLkFnZ3JlZ2F0ZWRTZW5zb3JEYXRhEoMBCgpHZXRBbGxEYXRhEjou",
            "V2VhdGhlclNlbnNvckVtdWxhdG9yU2VydmljZS5SZXF1ZXN0UmVhZEFsbEFn",
            "Z3JlZ2F0ZWREYXRhGjcuV2VhdGhlclNlbnNvckVtdWxhdG9yU2VydmljZS5B",
            "Z2dyZWdhdGVkU2Vuc29yRGF0YVNsaWNlMAFCNKoCMVRlc3RJU2VydmUuQ29u",
            "dHJhY3RzLldlYXRoZXJTZW5zb3JFbXVsYXRvclNlcnZpY2ViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::TestIServe.Contracts.WeatherSensorEmulatorService.TypeOperation), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TestIServe.Contracts.WeatherSensorEmulatorService.RequestReadAllAggregatedData), global::TestIServe.Contracts.WeatherSensorEmulatorService.RequestReadAllAggregatedData.Parser, new[]{ "ClientId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TestIServe.Contracts.WeatherSensorEmulatorService.AggregatedSensorDataSlice), global::TestIServe.Contracts.WeatherSensorEmulatorService.AggregatedSensorDataSlice.Parser, new[]{ "Id", "SliceTime", "AggreagateSensorData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TestIServe.Contracts.WeatherSensorEmulatorService.AggregatedSensorData), global::TestIServe.Contracts.WeatherSensorEmulatorService.AggregatedSensorData.Parser, new[]{ "TemperatureAverage", "HumidifierAverage", "CarbonDioxideContentMin", "CarbonDioxideContentMax" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TestIServe.Contracts.WeatherSensorEmulatorService.RequestAggreagationData), global::TestIServe.Contracts.WeatherSensorEmulatorService.RequestAggreagationData.Parser, new[]{ "Id", "FromTime", "CountMinutes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TestIServe.Contracts.WeatherSensorEmulatorService.ResponseParam), global::TestIServe.Contracts.WeatherSensorEmulatorService.ResponseParam.Parser, new[]{ "IsHaveValue", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TestIServe.Contracts.WeatherSensorEmulatorService.RequestSubscribeUnsubscribe), global::TestIServe.Contracts.WeatherSensorEmulatorService.RequestSubscribeUnsubscribe.Parser, new[]{ "ClientId", "Operation", "SensorsId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TestIServe.Contracts.WeatherSensorEmulatorService.ResponseSensorsData), global::TestIServe.Contracts.WeatherSensorEmulatorService.ResponseSensorsData.Parser, new[]{ "ClientId", "SensorsDto" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TestIServe.Contracts.WeatherSensorEmulatorService.SensorDto), global::TestIServe.Contracts.WeatherSensorEmulatorService.SensorDto.Parser, new[]{ "SensorId", "Time", "Temperature", "Humidifier", "CarbonDioxideContent" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Тип операции
  /// </summary>
  public enum TypeOperation {
    [pbr::OriginalName("none")] None = 0,
    [pbr::OriginalName("subscribe")] Subscribe = 1,
    [pbr::OriginalName("unsubscribe")] Unsubscribe = 2,
  }

  #endregion

  #region Messages
  public sealed partial class RequestReadAllAggregatedData : pb::IMessage<RequestReadAllAggregatedData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RequestReadAllAggregatedData> _parser = new pb::MessageParser<RequestReadAllAggregatedData>(() => new RequestReadAllAggregatedData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RequestReadAllAggregatedData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TestIServe.Contracts.WeatherSensorEmulatorService.WeatherSensorEmulatorReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequestReadAllAggregatedData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequestReadAllAggregatedData(RequestReadAllAggregatedData other) : this() {
      clientId_ = other.clientId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequestReadAllAggregatedData Clone() {
      return new RequestReadAllAggregatedData(this);
    }

    /// <summary>Field number for the "clientId" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private string clientId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientId {
      get { return clientId_; }
      set {
        clientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RequestReadAllAggregatedData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RequestReadAllAggregatedData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientId != other.ClientId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientId.Length != 0) hash ^= ClientId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ClientId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ClientId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ClientId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RequestReadAllAggregatedData other) {
      if (other == null) {
        return;
      }
      if (other.ClientId.Length != 0) {
        ClientId = other.ClientId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ClientId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AggregatedSensorDataSlice : pb::IMessage<AggregatedSensorDataSlice>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AggregatedSensorDataSlice> _parser = new pb::MessageParser<AggregatedSensorDataSlice>(() => new AggregatedSensorDataSlice());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AggregatedSensorDataSlice> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TestIServe.Contracts.WeatherSensorEmulatorService.WeatherSensorEmulatorReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AggregatedSensorDataSlice() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AggregatedSensorDataSlice(AggregatedSensorDataSlice other) : this() {
      id_ = other.id_;
      sliceTime_ = other.sliceTime_;
      aggreagateSensorData_ = other.aggreagateSensorData_ != null ? other.aggreagateSensorData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AggregatedSensorDataSlice Clone() {
      return new AggregatedSensorDataSlice(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sliceTime" field.</summary>
    public const int SliceTimeFieldNumber = 2;
    private long sliceTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SliceTime {
      get { return sliceTime_; }
      set {
        sliceTime_ = value;
      }
    }

    /// <summary>Field number for the "aggreagateSensorData" field.</summary>
    public const int AggreagateSensorDataFieldNumber = 3;
    private global::TestIServe.Contracts.WeatherSensorEmulatorService.AggregatedSensorData aggreagateSensorData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::TestIServe.Contracts.WeatherSensorEmulatorService.AggregatedSensorData AggreagateSensorData {
      get { return aggreagateSensorData_; }
      set {
        aggreagateSensorData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AggregatedSensorDataSlice);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AggregatedSensorDataSlice other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (SliceTime != other.SliceTime) return false;
      if (!object.Equals(AggreagateSensorData, other.AggreagateSensorData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (SliceTime != 0L) hash ^= SliceTime.GetHashCode();
      if (aggreagateSensorData_ != null) hash ^= AggreagateSensorData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (SliceTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(SliceTime);
      }
      if (aggreagateSensorData_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AggreagateSensorData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (SliceTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(SliceTime);
      }
      if (aggreagateSensorData_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AggreagateSensorData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (SliceTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SliceTime);
      }
      if (aggreagateSensorData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AggreagateSensorData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AggregatedSensorDataSlice other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.SliceTime != 0L) {
        SliceTime = other.SliceTime;
      }
      if (other.aggreagateSensorData_ != null) {
        if (aggreagateSensorData_ == null) {
          AggreagateSensorData = new global::TestIServe.Contracts.WeatherSensorEmulatorService.AggregatedSensorData();
        }
        AggreagateSensorData.MergeFrom(other.AggreagateSensorData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            SliceTime = input.ReadInt64();
            break;
          }
          case 26: {
            if (aggreagateSensorData_ == null) {
              AggreagateSensorData = new global::TestIServe.Contracts.WeatherSensorEmulatorService.AggregatedSensorData();
            }
            input.ReadMessage(AggreagateSensorData);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            SliceTime = input.ReadInt64();
            break;
          }
          case 26: {
            if (aggreagateSensorData_ == null) {
              AggreagateSensorData = new global::TestIServe.Contracts.WeatherSensorEmulatorService.AggregatedSensorData();
            }
            input.ReadMessage(AggreagateSensorData);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AggregatedSensorData : pb::IMessage<AggregatedSensorData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AggregatedSensorData> _parser = new pb::MessageParser<AggregatedSensorData>(() => new AggregatedSensorData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AggregatedSensorData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TestIServe.Contracts.WeatherSensorEmulatorService.WeatherSensorEmulatorReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AggregatedSensorData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AggregatedSensorData(AggregatedSensorData other) : this() {
      temperatureAverage_ = other.temperatureAverage_;
      humidifierAverage_ = other.humidifierAverage_;
      carbonDioxideContentMin_ = other.carbonDioxideContentMin_;
      carbonDioxideContentMax_ = other.carbonDioxideContentMax_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AggregatedSensorData Clone() {
      return new AggregatedSensorData(this);
    }

    /// <summary>Field number for the "TemperatureAverage" field.</summary>
    public const int TemperatureAverageFieldNumber = 1;
    private float temperatureAverage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float TemperatureAverage {
      get { return temperatureAverage_; }
      set {
        temperatureAverage_ = value;
      }
    }

    /// <summary>Field number for the "HumidifierAverage" field.</summary>
    public const int HumidifierAverageFieldNumber = 2;
    private float humidifierAverage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float HumidifierAverage {
      get { return humidifierAverage_; }
      set {
        humidifierAverage_ = value;
      }
    }

    /// <summary>Field number for the "CarbonDioxideContentMin" field.</summary>
    public const int CarbonDioxideContentMinFieldNumber = 3;
    private float carbonDioxideContentMin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float CarbonDioxideContentMin {
      get { return carbonDioxideContentMin_; }
      set {
        carbonDioxideContentMin_ = value;
      }
    }

    /// <summary>Field number for the "CarbonDioxideContentMax" field.</summary>
    public const int CarbonDioxideContentMaxFieldNumber = 4;
    private float carbonDioxideContentMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float CarbonDioxideContentMax {
      get { return carbonDioxideContentMax_; }
      set {
        carbonDioxideContentMax_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AggregatedSensorData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AggregatedSensorData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TemperatureAverage, other.TemperatureAverage)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(HumidifierAverage, other.HumidifierAverage)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CarbonDioxideContentMin, other.CarbonDioxideContentMin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CarbonDioxideContentMax, other.CarbonDioxideContentMax)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TemperatureAverage != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TemperatureAverage);
      if (HumidifierAverage != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(HumidifierAverage);
      if (CarbonDioxideContentMin != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CarbonDioxideContentMin);
      if (CarbonDioxideContentMax != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CarbonDioxideContentMax);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TemperatureAverage != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(TemperatureAverage);
      }
      if (HumidifierAverage != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(HumidifierAverage);
      }
      if (CarbonDioxideContentMin != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(CarbonDioxideContentMin);
      }
      if (CarbonDioxideContentMax != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(CarbonDioxideContentMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TemperatureAverage != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(TemperatureAverage);
      }
      if (HumidifierAverage != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(HumidifierAverage);
      }
      if (CarbonDioxideContentMin != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(CarbonDioxideContentMin);
      }
      if (CarbonDioxideContentMax != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(CarbonDioxideContentMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TemperatureAverage != 0F) {
        size += 1 + 4;
      }
      if (HumidifierAverage != 0F) {
        size += 1 + 4;
      }
      if (CarbonDioxideContentMin != 0F) {
        size += 1 + 4;
      }
      if (CarbonDioxideContentMax != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AggregatedSensorData other) {
      if (other == null) {
        return;
      }
      if (other.TemperatureAverage != 0F) {
        TemperatureAverage = other.TemperatureAverage;
      }
      if (other.HumidifierAverage != 0F) {
        HumidifierAverage = other.HumidifierAverage;
      }
      if (other.CarbonDioxideContentMin != 0F) {
        CarbonDioxideContentMin = other.CarbonDioxideContentMin;
      }
      if (other.CarbonDioxideContentMax != 0F) {
        CarbonDioxideContentMax = other.CarbonDioxideContentMax;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            TemperatureAverage = input.ReadFloat();
            break;
          }
          case 21: {
            HumidifierAverage = input.ReadFloat();
            break;
          }
          case 29: {
            CarbonDioxideContentMin = input.ReadFloat();
            break;
          }
          case 37: {
            CarbonDioxideContentMax = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            TemperatureAverage = input.ReadFloat();
            break;
          }
          case 21: {
            HumidifierAverage = input.ReadFloat();
            break;
          }
          case 29: {
            CarbonDioxideContentMin = input.ReadFloat();
            break;
          }
          case 37: {
            CarbonDioxideContentMax = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RequestAggreagationData : pb::IMessage<RequestAggreagationData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RequestAggreagationData> _parser = new pb::MessageParser<RequestAggreagationData>(() => new RequestAggreagationData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RequestAggreagationData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TestIServe.Contracts.WeatherSensorEmulatorService.WeatherSensorEmulatorReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequestAggreagationData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequestAggreagationData(RequestAggreagationData other) : this() {
      id_ = other.id_;
      fromTime_ = other.fromTime_;
      countMinutes_ = other.countMinutes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequestAggreagationData Clone() {
      return new RequestAggreagationData(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fromTime" field.</summary>
    public const int FromTimeFieldNumber = 2;
    private long fromTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long FromTime {
      get { return fromTime_; }
      set {
        fromTime_ = value;
      }
    }

    /// <summary>Field number for the "countMinutes" field.</summary>
    public const int CountMinutesFieldNumber = 3;
    private int countMinutes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CountMinutes {
      get { return countMinutes_; }
      set {
        countMinutes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RequestAggreagationData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RequestAggreagationData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (FromTime != other.FromTime) return false;
      if (CountMinutes != other.CountMinutes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (FromTime != 0L) hash ^= FromTime.GetHashCode();
      if (CountMinutes != 0) hash ^= CountMinutes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (FromTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(FromTime);
      }
      if (CountMinutes != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CountMinutes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (FromTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(FromTime);
      }
      if (CountMinutes != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CountMinutes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (FromTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FromTime);
      }
      if (CountMinutes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CountMinutes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RequestAggreagationData other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.FromTime != 0L) {
        FromTime = other.FromTime;
      }
      if (other.CountMinutes != 0) {
        CountMinutes = other.CountMinutes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            FromTime = input.ReadInt64();
            break;
          }
          case 24: {
            CountMinutes = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            FromTime = input.ReadInt64();
            break;
          }
          case 24: {
            CountMinutes = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ResponseParam : pb::IMessage<ResponseParam>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResponseParam> _parser = new pb::MessageParser<ResponseParam>(() => new ResponseParam());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ResponseParam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TestIServe.Contracts.WeatherSensorEmulatorService.WeatherSensorEmulatorReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResponseParam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResponseParam(ResponseParam other) : this() {
      isHaveValue_ = other.isHaveValue_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResponseParam Clone() {
      return new ResponseParam(this);
    }

    /// <summary>Field number for the "isHaveValue" field.</summary>
    public const int IsHaveValueFieldNumber = 1;
    private bool isHaveValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsHaveValue {
      get { return isHaveValue_; }
      set {
        isHaveValue_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private float value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ResponseParam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ResponseParam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsHaveValue != other.IsHaveValue) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Value, other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (IsHaveValue != false) hash ^= IsHaveValue.GetHashCode();
      if (Value != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Value);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IsHaveValue != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsHaveValue);
      }
      if (Value != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IsHaveValue != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsHaveValue);
      }
      if (Value != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (IsHaveValue != false) {
        size += 1 + 1;
      }
      if (Value != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ResponseParam other) {
      if (other == null) {
        return;
      }
      if (other.IsHaveValue != false) {
        IsHaveValue = other.IsHaveValue;
      }
      if (other.Value != 0F) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsHaveValue = input.ReadBool();
            break;
          }
          case 21: {
            Value = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsHaveValue = input.ReadBool();
            break;
          }
          case 21: {
            Value = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RequestSubscribeUnsubscribe : pb::IMessage<RequestSubscribeUnsubscribe>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RequestSubscribeUnsubscribe> _parser = new pb::MessageParser<RequestSubscribeUnsubscribe>(() => new RequestSubscribeUnsubscribe());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RequestSubscribeUnsubscribe> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TestIServe.Contracts.WeatherSensorEmulatorService.WeatherSensorEmulatorReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequestSubscribeUnsubscribe() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequestSubscribeUnsubscribe(RequestSubscribeUnsubscribe other) : this() {
      clientId_ = other.clientId_;
      operation_ = other.operation_;
      sensorsId_ = other.sensorsId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequestSubscribeUnsubscribe Clone() {
      return new RequestSubscribeUnsubscribe(this);
    }

    /// <summary>Field number for the "clientId" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private string clientId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientId {
      get { return clientId_; }
      set {
        clientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "operation" field.</summary>
    public const int OperationFieldNumber = 2;
    private global::TestIServe.Contracts.WeatherSensorEmulatorService.TypeOperation operation_ = global::TestIServe.Contracts.WeatherSensorEmulatorService.TypeOperation.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::TestIServe.Contracts.WeatherSensorEmulatorService.TypeOperation Operation {
      get { return operation_; }
      set {
        operation_ = value;
      }
    }

    /// <summary>Field number for the "sensorsId" field.</summary>
    public const int SensorsIdFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_sensorsId_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> sensorsId_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> SensorsId {
      get { return sensorsId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RequestSubscribeUnsubscribe);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RequestSubscribeUnsubscribe other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientId != other.ClientId) return false;
      if (Operation != other.Operation) return false;
      if(!sensorsId_.Equals(other.sensorsId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientId.Length != 0) hash ^= ClientId.GetHashCode();
      if (Operation != global::TestIServe.Contracts.WeatherSensorEmulatorService.TypeOperation.None) hash ^= Operation.GetHashCode();
      hash ^= sensorsId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ClientId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientId);
      }
      if (Operation != global::TestIServe.Contracts.WeatherSensorEmulatorService.TypeOperation.None) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Operation);
      }
      sensorsId_.WriteTo(output, _repeated_sensorsId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ClientId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientId);
      }
      if (Operation != global::TestIServe.Contracts.WeatherSensorEmulatorService.TypeOperation.None) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Operation);
      }
      sensorsId_.WriteTo(ref output, _repeated_sensorsId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ClientId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientId);
      }
      if (Operation != global::TestIServe.Contracts.WeatherSensorEmulatorService.TypeOperation.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Operation);
      }
      size += sensorsId_.CalculateSize(_repeated_sensorsId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RequestSubscribeUnsubscribe other) {
      if (other == null) {
        return;
      }
      if (other.ClientId.Length != 0) {
        ClientId = other.ClientId;
      }
      if (other.Operation != global::TestIServe.Contracts.WeatherSensorEmulatorService.TypeOperation.None) {
        Operation = other.Operation;
      }
      sensorsId_.Add(other.sensorsId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientId = input.ReadString();
            break;
          }
          case 16: {
            Operation = (global::TestIServe.Contracts.WeatherSensorEmulatorService.TypeOperation) input.ReadEnum();
            break;
          }
          case 26: {
            sensorsId_.AddEntriesFrom(input, _repeated_sensorsId_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ClientId = input.ReadString();
            break;
          }
          case 16: {
            Operation = (global::TestIServe.Contracts.WeatherSensorEmulatorService.TypeOperation) input.ReadEnum();
            break;
          }
          case 26: {
            sensorsId_.AddEntriesFrom(ref input, _repeated_sensorsId_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ResponseSensorsData : pb::IMessage<ResponseSensorsData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResponseSensorsData> _parser = new pb::MessageParser<ResponseSensorsData>(() => new ResponseSensorsData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ResponseSensorsData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TestIServe.Contracts.WeatherSensorEmulatorService.WeatherSensorEmulatorReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResponseSensorsData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResponseSensorsData(ResponseSensorsData other) : this() {
      clientId_ = other.clientId_;
      sensorsDto_ = other.sensorsDto_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResponseSensorsData Clone() {
      return new ResponseSensorsData(this);
    }

    /// <summary>Field number for the "clientId" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private string clientId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientId {
      get { return clientId_; }
      set {
        clientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sensorsDto" field.</summary>
    public const int SensorsDtoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::TestIServe.Contracts.WeatherSensorEmulatorService.SensorDto> _repeated_sensorsDto_codec
        = pb::FieldCodec.ForMessage(18, global::TestIServe.Contracts.WeatherSensorEmulatorService.SensorDto.Parser);
    private readonly pbc::RepeatedField<global::TestIServe.Contracts.WeatherSensorEmulatorService.SensorDto> sensorsDto_ = new pbc::RepeatedField<global::TestIServe.Contracts.WeatherSensorEmulatorService.SensorDto>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::TestIServe.Contracts.WeatherSensorEmulatorService.SensorDto> SensorsDto {
      get { return sensorsDto_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ResponseSensorsData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ResponseSensorsData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientId != other.ClientId) return false;
      if(!sensorsDto_.Equals(other.sensorsDto_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientId.Length != 0) hash ^= ClientId.GetHashCode();
      hash ^= sensorsDto_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ClientId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientId);
      }
      sensorsDto_.WriteTo(output, _repeated_sensorsDto_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ClientId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientId);
      }
      sensorsDto_.WriteTo(ref output, _repeated_sensorsDto_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ClientId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientId);
      }
      size += sensorsDto_.CalculateSize(_repeated_sensorsDto_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ResponseSensorsData other) {
      if (other == null) {
        return;
      }
      if (other.ClientId.Length != 0) {
        ClientId = other.ClientId;
      }
      sensorsDto_.Add(other.sensorsDto_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientId = input.ReadString();
            break;
          }
          case 18: {
            sensorsDto_.AddEntriesFrom(input, _repeated_sensorsDto_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ClientId = input.ReadString();
            break;
          }
          case 18: {
            sensorsDto_.AddEntriesFrom(ref input, _repeated_sensorsDto_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SensorDto : pb::IMessage<SensorDto>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SensorDto> _parser = new pb::MessageParser<SensorDto>(() => new SensorDto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SensorDto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TestIServe.Contracts.WeatherSensorEmulatorService.WeatherSensorEmulatorReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SensorDto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SensorDto(SensorDto other) : this() {
      sensorId_ = other.sensorId_;
      time_ = other.time_;
      temperature_ = other.temperature_;
      humidifier_ = other.humidifier_;
      carbonDioxideContent_ = other.carbonDioxideContent_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SensorDto Clone() {
      return new SensorDto(this);
    }

    /// <summary>Field number for the "sensorId" field.</summary>
    public const int SensorIdFieldNumber = 1;
    private string sensorId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SensorId {
      get { return sensorId_; }
      set {
        sensorId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 2;
    private long time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "temperature" field.</summary>
    public const int TemperatureFieldNumber = 3;
    private float temperature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Temperature {
      get { return temperature_; }
      set {
        temperature_ = value;
      }
    }

    /// <summary>Field number for the "humidifier" field.</summary>
    public const int HumidifierFieldNumber = 4;
    private float humidifier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Humidifier {
      get { return humidifier_; }
      set {
        humidifier_ = value;
      }
    }

    /// <summary>Field number for the "carbonDioxideContent" field.</summary>
    public const int CarbonDioxideContentFieldNumber = 5;
    private float carbonDioxideContent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float CarbonDioxideContent {
      get { return carbonDioxideContent_; }
      set {
        carbonDioxideContent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SensorDto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SensorDto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SensorId != other.SensorId) return false;
      if (Time != other.Time) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Temperature, other.Temperature)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Humidifier, other.Humidifier)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CarbonDioxideContent, other.CarbonDioxideContent)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SensorId.Length != 0) hash ^= SensorId.GetHashCode();
      if (Time != 0L) hash ^= Time.GetHashCode();
      if (Temperature != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Temperature);
      if (Humidifier != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Humidifier);
      if (CarbonDioxideContent != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CarbonDioxideContent);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SensorId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SensorId);
      }
      if (Time != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Time);
      }
      if (Temperature != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Temperature);
      }
      if (Humidifier != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Humidifier);
      }
      if (CarbonDioxideContent != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(CarbonDioxideContent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SensorId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SensorId);
      }
      if (Time != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Time);
      }
      if (Temperature != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Temperature);
      }
      if (Humidifier != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Humidifier);
      }
      if (CarbonDioxideContent != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(CarbonDioxideContent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SensorId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SensorId);
      }
      if (Time != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Time);
      }
      if (Temperature != 0F) {
        size += 1 + 4;
      }
      if (Humidifier != 0F) {
        size += 1 + 4;
      }
      if (CarbonDioxideContent != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SensorDto other) {
      if (other == null) {
        return;
      }
      if (other.SensorId.Length != 0) {
        SensorId = other.SensorId;
      }
      if (other.Time != 0L) {
        Time = other.Time;
      }
      if (other.Temperature != 0F) {
        Temperature = other.Temperature;
      }
      if (other.Humidifier != 0F) {
        Humidifier = other.Humidifier;
      }
      if (other.CarbonDioxideContent != 0F) {
        CarbonDioxideContent = other.CarbonDioxideContent;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SensorId = input.ReadString();
            break;
          }
          case 16: {
            Time = input.ReadInt64();
            break;
          }
          case 29: {
            Temperature = input.ReadFloat();
            break;
          }
          case 37: {
            Humidifier = input.ReadFloat();
            break;
          }
          case 45: {
            CarbonDioxideContent = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SensorId = input.ReadString();
            break;
          }
          case 16: {
            Time = input.ReadInt64();
            break;
          }
          case 29: {
            Temperature = input.ReadFloat();
            break;
          }
          case 37: {
            Humidifier = input.ReadFloat();
            break;
          }
          case 45: {
            CarbonDioxideContent = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
